#!/usr/bin/env python3
from graphviz import Digraph
import grimoire.hmm as hmm
import argparse

## Command line w/ Argparse ##
parser = argparse.ArgumentParser(description='HMM Grapher')
parser.add_argument('--hmm', required=True, type=str,
	metavar='<path>', help='path to input HMM file (%(type)s)')
parser.add_argument('--svg', required=True, type=str,
	metavar='<path>', help='path to output svg file (%(type)s)')
parser.add_argument('--prob', action='store_true',
	help='label transition probabilities')
parser.add_argument('--tb', action='store_true',
	help='top to bottom graph [default left to right]')
arg = parser.parse_args()

# Default Graph Attributes
graph = Digraph(format='png')
graph.attr('node', shape='circle')
graph.attr(label=str(arg.hmm))
if arg.tb: graph.attr(rankdir='TB')
else: graph.attr(rankdir='LR')

# Read in File and Make Graph
hmm = hmm.HMM.read(arg.hmm)

for s1 in hmm.states:
	graph.node(s1.name)
	for s2 in s1.next:
		label = None
		if arg.prob:
			label=str(round(s1.next[s2], 3))
		graph.edge(s1.name, s2, label=label)

# Save Graph as SVG
with open(arg.svg, 'w') as f:
    f.write(graph._repr_svg_())
